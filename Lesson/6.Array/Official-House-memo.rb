# Official-House
#今回は何時もの方針と異なり、入力時にそのまま計算もやらせちゃう
#その方が一回で終わるから簡単
n = gets.to_i
n.times do
  b, f, r, v = gets.split.map(&:to_i)
  ans[b-1][f-1][r-1] += v
end

# フロア管理用のメソッドを作成する
# build = Array.new(4)
# floor = Array.new(3)
# room = Array.new(10,0)
=begin
#ans = Array.new(4, Array.new(3, Array.new(10, 0)))#この書き方は駄目、たのしいRuby p268にあるけど、全て同じオブジェクト扱いになるってしまい、
結果的にしたのようになる
  ans[1][1][3] += 8
結果
  0 0 0 8 0 0 0 0 0 0
  0 0 0 8 0 0 0 0 0 0
  0 0 0 8 0 0 0 0 0 0
  ####################
  0 0 0 8 0 0 0 0 0 0
  0 0 0 8 0 0 0 0 0 0
  0 0 0 8 0 0 0 0 0 0
  ####################
  0 0 0 8 0 0 0 0 0 0
  0 0 0 8 0 0 0 0 0 0
  0 0 0 8 0 0 0 0 0 0
  ####################
  0 0 0 8 0 0 0 0 0 0
  0 0 0 8 0 0 0 0 0 0
  0 0 0 8 0 0 0 0 0 0
=end
# 下の生成方法が正解、うーん分かり辛い
配列の作成方法
ans =
  Array.new(4) do
    Array.new(3) do
      Array.new(10, 0)
    end
  end

# 結果の表示部
ans.length.times do |i|
  puts '#' * 20 if i > 0
  ans[i].each do |j|
    puts j.join(' ')
  end
end

# (表示のさせ方に注意）)、上のやり方でやっとこれが出る
=begin
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
####################
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
####################
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
####################
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
=end
# def house
# end

=begin
#入力と出力の解釈
3
1 1 3 8
3 2 2 7
4 3 8 1


     部屋の位置ｒ
    ↓
0 0 8 0 0 0 0 0 0 0  ←f  |
0 0 0 0 0 0 0 0 0 0       |ここの空間がb,
0 0 0 0 0 0 0 0 0 0       |
####################
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
####################
0 0 0 0 0 0 0 0 0 0
0 7 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
####################
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 1 0 0

まずは一個一個考えていこう
Rubyの多次元配列はネストの配列で管理するので、非常に分かり辛くなる
なので関係性をしっかり理解してかかないと
まずr,fの関係でネストの配列を作る
f = [a,b,c]
で、a,b,cそれぞれの回で10部屋ずつあるっていう解釈をする
f = [v1,v2,v3]#実際は数字要らないけど分かりやすくするために記入
このfを4つ持つネスト配列がbになる
b =[f1,f2,f3,f4]
こうなるように、配列を作っていく
うわ、大変

あと、入力値が地味にトラップあり
配列に突っ込む時はb,r,fの値を-1にする必要あり
=end
